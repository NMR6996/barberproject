# Generated by Django 4.2.3 on 2023-12-29 08:33

import barberproject.storage_backends
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0014_remove_user_is_barber'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Barber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barber_name', models.CharField(blank=True, max_length=50)),
                ('barber_img', models.ImageField(blank=True, storage=barberproject.storage_backends.PublicMediaStorage(), upload_to='barber_img')),
                ('barber_phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('barber_email', models.CharField(blank=True, max_length=50, null=True)),
                ('barber_facebook', models.CharField(blank=True, max_length=50, null=True)),
                ('barber_twitter', models.CharField(blank=True, max_length=50, null=True)),
                ('barber_instagram', models.CharField(blank=True, max_length=50, null=True)),
                ('barber_youtube', models.CharField(blank=True, max_length=50, null=True)),
                ('barber_whatsapp', models.CharField(blank=True, max_length=50, null=True)),
                ('barber_start_time', models.TimeField(blank=True, null=True)),
                ('barber_end_time', models.TimeField(blank=True, null=True)),
                ('barber_adress', models.CharField(blank=True, max_length=300, null=True)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('is_home', models.BooleanField(blank=True, default=True)),
                ('barber_money', models.IntegerField(default=3)),
                ('interest_rate', models.FloatField(default=2.5)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_success', models.BooleanField(default=False)),
                ('is_success_description', models.CharField(blank=True, max_length=20, null=True)),
                ('barber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sign.barber', verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barber_service', models.CharField(max_length=100)),
                ('service_price', models.IntegerField()),
                ('service_time', models.IntegerField()),
                ('service_img', models.ImageField(storage=barberproject.storage_backends.PublicMediaStorage(), upload_to='service_img')),
                ('barber_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sign.barber')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=10)),
                ('time', models.TimeField()),
                ('date', models.DateField()),
                ('optional', models.TextField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('service_cost', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('barber_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sign.barber')),
                ('set_service', models.ManyToManyField(blank=True, default=None, to='sign.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='BarberSalon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salon_name', models.CharField(max_length=50)),
                ('salon_image', models.ImageField(storage=barberproject.storage_backends.PublicMediaStorage(), upload_to='salon/')),
                ('barber', models.ManyToManyField(blank=True, default=None, related_name='barber', to='sign.barber')),
            ],
        ),
    ]
